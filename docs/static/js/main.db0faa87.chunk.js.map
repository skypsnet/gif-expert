{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OAEI,0BAAMC,SAbW,SAACC,GACnBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAQ,IAClBR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAmBO,OAClCN,EAAc,OAQpB,2BACGO,KAAK,OACLC,MAAOT,EACPU,SArBe,SAACP,GACzBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,Y,uBCRhBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAACC,GAIxB,OAFApB,QAAQC,IAAImB,GAGR,yBAAKC,UAAU,wBACd,yBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAChC,2BAAII,EAAMJ,SCJNQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAa,IAAD,EAEbhB,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiCvC,OA1BAC,qBAAU,WAERzB,EAAQC,GACPyB,MAAK,SAAAC,GACFC,YAAW,WACP/B,QAAQC,IAAI6B,GACdH,EAAS,CACPhB,KAAKmB,EACLL,SAAQ,MAET,UAIP,CAACrB,IAYIsB,ED1B2BM,CAAa5B,GAAhCa,EALsB,EAK3BN,KAAYc,EALe,EAKfA,QAWpB,OACI,oCACA,wBAAIJ,UAAU,mBAAmBjB,GAChCqB,GAAW,uBAAGJ,UAAU,kCAAb,YAGZ,yBAAKA,UAAU,aAKHJ,EAAOJ,KAAK,SAAAC,GAAG,OACd,kBAAC,EAAD,eAGAmB,IAAKnB,EAAIC,IACLD,UEOVoB,EAvCG,WAAK,IAAD,EAEkB9C,mBAAS,CAAC,gBAF5B,mBAEX+C,EAFW,KAEChD,EAFD,KAYjB,OAEG,oCACA,4BALW,gBAMX,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAIA,4BAEQgD,EAAWtB,KAAI,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACA6B,IAAK7B,EACLA,SAAUA,U,MC1B1BgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.db0faa87.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('') // Si se deja vacio es undefined\r\n    const handleInputChange = (e) =>{\r\n      console.log(e.target.value)\r\n      setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n       e.preventDefault();\r\n       //setCategory\r\n\r\n       if(inputValue.trim().length >2){\r\n                  setCategories(c => [inputValue,...c])\r\n                  setinputValue('')\r\n       }\r\n       \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n               type=\"text\"\r\n               value={inputValue}\r\n               onChange={handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n    \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=npTqSJVBv9FaRCMtVXHeKEjRD110NRtM`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    \r\n\r\n    return gifs\r\n        \r\n\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n    \r\n    console.log(props)\r\n    \r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n         <img src={props.url} alt={props.title} />\r\n         <p>{props.title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n//    const [images, setimages] = useState([]);\r\n  \r\n\r\n     const {data:images,loading} =  useFetchGifs(category);\r\n\r\n  \r\n//    useEffect(()=>{\r\n//        getGifs(category)\r\n//        .then(imgs => setimages(imgs))\r\n//    },[category])  // Evitar que al renderizar se efectue la funci√≥n\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate_animated animate_flash\">Cargando</p>}\r\n        \r\n        \r\n        <div className=\"card-grid\">\r\n        \r\n        \r\n            \r\n                {\r\n                    images.map( img => (\r\n                     <GifGridItem \r\n                     \r\n                    //  img={img}\r\n                     key={img.id}\r\n                     {...img}\r\n                     />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=> {\r\n\r\n  const [state, setstate] = useState({\r\n      data: [],\r\n      loading: true\r\n  });\r\n\r\n  useEffect(()=>{\r\n    \r\n    getGifs(category)\r\n    .then(imgs => {\r\n        setTimeout(() => {\r\n            console.log(imgs)\r\n          setstate({\r\n            data:imgs,\r\n            loading:false\r\n        });  \r\n        }, 3000);\r\n        \r\n    })\r\n\r\n  },[category])\r\n\r\n   \r\n\r\n\r\n//   setTimeout(() => {\r\n//     setstate({\r\n//         data: [1,2,3],\r\n//         loading: false\r\n//     }) \r\n//     }, 3000);\r\n\r\n  return state; // {data:[], loading:true}\r\n  \r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst GifExpert = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     const nuevoValor='One Piece'\r\n    //     // setCategories(c => [...c,nuevoValor])\r\n    //     setCategories([...categories,nuevoValor])\r\n    // }\r\n\r\n    const nombre = 'GifExpertApp'\r\n    // const categories = ['One Punch Man','Samurai X','Dragon Ball']\r\n     return(\r\n\r\n        <>\r\n        <h1>{nombre}</h1>\r\n        <AddCategory setCategories={setCategories}/>\r\n        \r\n        <hr/>\r\n\r\n        \r\n\r\n        <ul>\r\n            {\r\n                categories.map(category =>(\r\n                <GifGrid \r\n                key={category}\r\n                category={category}\r\n                />\r\n                ))\r\n            }\r\n        </ul>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GifExpert;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpert';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpert />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GitExpertApp</h2>\n// <hr/>\n"],"sourceRoot":""}